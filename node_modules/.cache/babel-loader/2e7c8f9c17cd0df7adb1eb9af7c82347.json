{"ast":null,"code":"class AuthService {\n  async login(username, password) {\n    await fetch('../../api/login', {\n      method: 'GET',\n      body: username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  async register(username, email, password) {\n    await fetch('../../api/register', {\n      method: 'POST',\n      body: username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/cjfulton/Documents/HCL/todo/src/components/auth.service.js"],"names":["AuthService","login","username","password","fetch","method","body","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","register","email","getCurrentUser","parse","getItem"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;AACd,QAAMC,KAAN,CAAYC,QAAZ,EAAsBC,QAAtB,EAAgC;AAC5B,UAAMC,KAAK,CAAC,iBAAD,EAAoB;AAC3BC,MAAAA,MAAM,EAAE,KADmB;AAE3BC,MAAAA,IAAI,EAAEJ,QAFqB;AAEXC,MAAAA;AAFW,KAApB,CAAL,CAIDI,IAJC,CAIIC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC3BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACH;;AACD,aAAOD,QAAQ,CAACC,IAAhB;AACH,KATC,CAAN;AAUH;;AAEDM,EAAAA,MAAM,GAAG;AACLJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACH;;AAED,QAAMC,QAAN,CAAef,QAAf,EAAyBgB,KAAzB,EAAgCf,QAAhC,EAA0C;AACtC,UAAMC,KAAK,CAAC,oBAAD,EAAuB;AAC9BC,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,IAAI,EAAEJ,QAFwB;AAEfgB,MAAAA,KAFe;AAERf,MAAAA;AAFQ,KAAvB,CAAX;AAIH;;AAEDgB,EAAAA,cAAc,GAAG;AACb,WAAON,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH;;AA3Ba;;AA8BlB,eAAe,IAAIrB,WAAJ,EAAf","sourcesContent":["class AuthService {\n    async login(username, password) {\n        await fetch('../../api/login', {\n            method: 'GET',\n            body: username, password\n        })\n            .then(response => {\n                if (response.data.accessToken) {\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\n                }\n                return response.data;\n            });\n    }\n\n    logout() {\n        localStorage.removeItem(\"user\");\n    }\n\n    async register(username, email, password) {\n        await fetch('../../api/register', {\n            method: 'POST',\n            body: username,email ,password\n        });\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem(\"user\"));\n    }\n}\n\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}